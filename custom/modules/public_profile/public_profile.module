<?php

/**
 * @file
 * Contains public_profile.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function public_profile_theme($existing, $type, $theme, $path) {
  return [
    'public_profile' => [
      'variables' => [
        'profile' => NULL,
        'account' => NULL,
        'guides' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_entity_presave().
 */
function public_profile_profile_presave(EntityInterface $entity) {
  if ($entity->bundle() == 'public') {
    $user = $entity->getOwner();
    $name = implode('-', [$user->get('field_first_name')->getString(), $user->get('field_last_name')->getString()]);
    $fragment = preg_replace('/[^a-z]+/', '-', strtolower($name));

    $entity->set('field_url_fragment', $fragment);

    Cache::invalidateTags(['user:' . $user->id()]);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function public_profile_form_profile_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $entity = $form_state->getFormObject()->getEntity();
  $user = $entity->uid->entity;

  if ($urlFragment = $entity->get('field_url_fragment')->value) {
    $form['profile_link_button'] = [
      '#type' => 'operations',
      '#links' => [
        'view' => [
          'title' => 'View your profile',
          'url' => Url::fromRoute('public_profile.view', ['url_fragment' => $urlFragment]),
        ],
      ],
      '#weight' => -1,
      '#attributes' => [
        'style' => ['margin-top:1em'],
      ],
    ];
  }

  if (!($user->field_display_on_connect_page->getValue())) {
    $form['group_specialized_help_tagging']['#access'] = FALSE;
  }

  if ($entity->bundle() == 'public' && !in_array('guide_editor', $user->getRoles())) {
    $toHide = [
      'field_guides_listing',
      'field_mini_biography',
      'field_show_library_link',
      'field_show_phone_number',
      'field_show_position_title',
      'field_show_pronouns',
      'field_show_social_media_icons',
      'field_show_subject_specialties',
      'field_show_website',
    ];

    foreach ($toHide as $field) {
      $form[$field]['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_entity_type_alter().
 *
 */
function public_profile_entity_type_alter(array &$entity_types) {
  $class = '\Drupal\public_profile\Form\PublicProfileForm';
  $entity_types['profile']->setFormClass('edit', $class);
  $entity_types['profile']->setFormClass('add', $class);
}
