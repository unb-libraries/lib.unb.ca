<?php

/**
 * @file
 * Contains guides.module.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;
use Drupal\editor\Entity\Editor;

/**
 * Implements hook_theme().
 */
function guides_theme($existing, $type, $theme, $path) {
  return [
    'ckeditor-wc-search' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_preprocess_field_multiple_value_form().
 *
 * Set custom "add more X" button values.
 */
function guides_preprocess_field_multiple_value_form(&$variables) {
  $values = [
    'related_guide_categories_add_more' => 'Add Another Category',
    'contacts_add_more' => 'Add Another Contact',
  ];

  if (isset($variables['element']['add_more']['#name'])) {
    $name = $variables['element']['add_more']['#name'];
    if (isset($values[$name])) {
      $variables['button']['#value'] = t($values[$name]);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function guides_form_guide_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $entity = $form_state->getFormObject()->getEntity();
  if ($entity->isNew()) {
    $user = User::load(\Drupal::currentUser()->id());
    $form['editors']['widget'][0]['subform']['field_user']['widget'][0]['target_id']['#default_value'] = $user;
  }
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function guides_ckeditor_css_alter(array &$css, Editor $editor) {
  $css[] = drupal_get_path('module', 'guides') . '/css/ckeditor.css';
}
