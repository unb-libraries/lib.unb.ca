<?php

/**
 * @file
 * Contains guides.module.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;
use Drupal\editor\Entity\Editor;
use PicoFeed\Reader\Reader;

/**
 * Implements hook_page_attachments().
 */
function guides_page_attachments(&$variables) {
  $variables['#attached']['library'][] = 'guides/guides';
}

/**
 * Implements hook_theme().
 */
function guides_theme($existing, $type, $theme, $path) {
  return [
    'categories' => [
      'variables' => [
        'categories' => NULL,
      ],
    ],
    'ckeditor-wc-search' => [
      'variables' => [],
    ],
    'ckeditor-eresources' => [
      'variables' => [
        'resources' => NULL,
        'options' => NULL,
      ],
    ],
    'guide_category' => [
      'render element' => 'elements',
    ],
    'guide' => [
      'render element' => 'elements',
    ],
    'page_title__guide' => [
    ],
    'views_exposed_form__research_guides' => [
      'render element' => 'form',
    ],
  ];
}

/**
 * Prepares variables for guide template.
 *
 * Default template: guide.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_guide(array &$variables) {
  $variables['guide'] = $variables['elements']['#guide'];
}

/**
 * Prepares variables for guide category template.
 *
 * Default template: guide-category.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_guide_category(array &$variables) {
  $variables['guide_category'] = $variables['elements']['#guide_category'];
}

/**
 * Implements hook_preprocess_field_multiple_value_form().
 *
 * Set custom "add more X" button values.
 */
function guides_preprocess_field_multiple_value_form(&$variables) {
  $values = [
    'related_guide_categories_add_more' => 'Add Another Category',
    'contacts_add_more' => 'Add Another Contact',
  ];

  if (isset($variables['element']['add_more']['#name'])) {
    $name = $variables['element']['add_more']['#name'];
    if (isset($values[$name])) {
      $variables['button']['#value'] = t($values[$name]);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function guides_form_guide_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $entity = $form_state->getFormObject()->getEntity();
  if ($entity->isNew()) {
    $user = User::load(\Drupal::currentUser()->id());
    $form['editors']['widget'][0]['subform']['field_user']['widget'][0]['target_id']['#default_value'] = $user;
  }
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function guides_ckeditor_css_alter(array &$css, Editor $editor) {
  $css[] = drupal_get_path('module', 'guides') . '/css/ckeditor.css';
}

/**
 * Implements hook_preprocess_page_title().
 */
function guides_preprocess_page_title(&$variables) {
  $route = \Drupal::routeMatch();
  switch ($route->getRouteName()) {
    case 'entity.guide_category.canonical':
      $variables['title'] .= ' Guides';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function guides_preprocess_page_title__guide(&$variables) {
  $variables['title'] .= ' Guide';
  $variables['askusStatus'] = _unb_libraries_askus_check_presence();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function guides_theme_suggestions_page_title_alter(array &$suggestions, array $variables) {
  $route = \Drupal::routeMatch();
  switch ($route->getRouteName()) {
    case 'entity.guide.canonical':
      $suggestions[] = 'page_title__guide';
  }
}
