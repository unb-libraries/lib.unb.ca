<?php

/**
 * @file
 * Contains ior.module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function ior_theme($existing, $type, $theme, $path) {
  return [
    'contest' => [
      'render element' => 'elements',
    ],
    'ior_submission' => [
      'render element' => 'elements',
    ],
    'ior_submission__preview' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for contest templates.
 *
 * Default template: contest.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_contest(array &$variables) {
  /** @var \Drupal\ior\Entity\ContestInterface $contest */
  $contest = $variables['elements']['#contest'];
  $variables['contest']['entity'] = $contest;

  foreach (\Drupal\Core\Render\Element::children($variables['elements']) as $key) {
    if ($contest->hasField($key) && !empty($contest->get($key)->getValue())) {
      $variables['contest'][$key] = $variables['elements'][$key];
      $variables['contest'][$key]['#label_display'] = 'hidden';
    }
  }
  $variables['contest']['is_open'] = $contest->isOpen();
  $variables['contest']['is_coming_up'] = $contest->isComingUp();
  $variables['contest']['is_closed'] = $contest->isClosed();
  $variables['contest']['submit_url'] = Url::fromRoute('entity.ior_submission.add_form', [
    'contest' => $contest->id(),
  ])->toString();
  $variables['contest']['submissions_url'] = Url::fromRoute('view.ior_submissions.page_1', [
    'contest' => $contest->id(),
  ])->toString();
}

/**
 * Prepares variables for submission templates.
 *
 * Default template: ior-submission.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_ior_submission(array &$variables) {
  /** @var \Drupal\ior\Entity\SubmissionInterface $submission */
  $submission = $variables['elements']['#ior_submission'];
  $variables['submission']['entity'] = $submission;
  foreach (\Drupal\Core\Render\Element::children($variables['elements']) as $key) {
    if ($submission->hasField($key) && !empty($submission->get($key)->getValue())) {
      $variables['submission'][$key] = $variables['elements'][$key];
      $variables['submission'][$key]['#label_display'] = 'hidden';
    }
  }

  $current_user = Drupal::currentUser();
  if ($current_user->hasPermission('view ior_submission moderation_state')) {
    /** @var \Drupal\content_moderation\ModerationInformationInterface $moderation_info */
    $moderation_info = Drupal::service('content_moderation.moderation_information');
    $moderation_state = $moderation_info->getWorkflowForEntity($submission)
      ->getTypePlugin()
      ->getState($submission->get('moderation_state')->value);
    $variables['submission']['state']['id'] = $moderation_state->id();
    $variables['submission']['state']['label'] = $moderation_state->label();
  }
  $variables['submission']['published'] = $submission->isPublished() || $current_user->hasPermission('view contestant details');

  if (Drupal::currentUser()->hasPermission('download full_resolution images')) {
    $variables['submission']['image_url'] = $submission->getImageUrl();
  }

  // This should be done in a template?
  $variables['submission']['field_first_name']['#attributes']['class'][] = 'd-inline';
  $variables['submission']['field_last_name']['#attributes']['class'][] = 'd-inline';
}

/**
 * Prepares variables for submission templates.
 *
 * Default template: ior-submission.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_ior_submission__preview(array &$variables) {
  /** @var \Drupal\ior\Entity\SubmissionInterface $submission */
  $submission = $variables['elements']['#ior_submission'];
  $variables['submission']['entity'] = $submission;
  foreach (\Drupal\Core\Render\Element::children($variables['elements']) as $key) {
    $variables['submission'][$key] = $variables['elements'][$key];
    $variables['submission'][$key]['#label_display'] = 'hidden';
  }

  $current_user = Drupal::currentUser();
  if ($current_user->hasPermission('view ior_submission moderation_state')) {
    /** @var \Drupal\content_moderation\ModerationInformationInterface $moderation_info */
    $moderation_info = Drupal::service('content_moderation.moderation_information');
    $moderation_state = $moderation_info->getWorkflowForEntity($submission)
      ->getTypePlugin()
      ->getState($submission->get('moderation_state')->value);
    $variables['#attached']['library'][] = 'ior/ior';
    $variables['submission']['state']['id'] = $moderation_state->id();
    $variables['submission']['state']['label'] = $moderation_state->label();
  }
  $variables['submission']['published'] = $submission->isPublished() || $current_user->hasPermission('view contestant details');
  $variables['submission']['url'] = $variables['elements']['#ior_submission']
    ->toUrl()
    ->toString();

  // This should be done in a template?
  $variables['submission']['field_first_name']['#attributes']['class'][] = 'd-inline';
  $variables['submission']['field_last_name']['#attributes']['class'][] = 'd-inline';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ior_theme_suggestions_ior_submission_alter(array &$suggestions, array $variables) {
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  $suggestion = 'ior_submission__' . $sanitized_view_mode;
  if (!in_array($suggestion, $suggestions)) {
    $suggestions[] = $suggestion;
  }
}
